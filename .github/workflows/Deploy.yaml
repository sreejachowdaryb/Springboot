name: CI/CD Pipeline for DemoApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}

      - name: Build the Application using Maven Wrapper
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: Run Unit Tests
        run: |
          chmod +x mvnw
          ./mvnw test

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t your-dockerhub-username/demoapp:latest .
          docker push your-dockerhub-username/demoapp:latest

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no user@your-server-ip <<EOF
          docker pull your-dockerhub-username/demoapp:latest
          docker stop demoapp || true
          docker rm demoapp || true
          docker run -d -p 8080:8080 --name demoapp your-dockerhub-username/demoapp:latest