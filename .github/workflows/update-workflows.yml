name: Update Workflows
on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      repository:
        required: false
        type: string
        default: 'edp-caller-workflows'
      update_edp_core_workflows:
        description: 'Update EDP Core workflows'
        type: boolean
        required: false
        default: true
      update_datadog_workflows:
        description: 'Update Datadog workflows'
        type: boolean
        required: false
        default: false
      update_container_workflows:
        description: 'Update Container workflows'
        type: boolean
        required: false
        default: false
      update_certification_workflows:
        description: 'Update Certification workflows'
        type: boolean
        required: false
        default: false
      callerWorkflowVersion:
        required: false
        type: string
        default: "3.35.0"
    secrets:
      ACTIONS_CONTAINER_DEBUG:
        required: false

env:
  LOCAL_TEST_ENV: edp-prod
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  ACTIONS_CONTAINER_DEBUG: ${{ secrets.ACTIONS_CONTAINER_DEBUG || secrets.ACTIONS_STEP_DEBUG }}
  GH_ADMIN_TOKEN: ${{ github.token }}

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  prepare_dev_override:
    runs-on: 
      group: enterprise/Default
      labels: [ "self-hosted", "linux" ]
    outputs:
      matrix_env: ${{ env.LOCAL_TEST_ENV == 'edp-englab' && 'englab' || 'prod' }}
    steps:
      - name: Print environment variables
        run: printenv

  update-workflows:
    needs: prepare_dev_override
    runs-on: 
      group: enterprise/Default
      labels: ["self-hosted", "${{ matrix.env }}"]
    strategy:
      matrix:
        include:
          - env: ${{ needs.prepare_dev_override.outputs.matrix_env }}
    env:
      CLOUD_ENV: ${{ matrix.env }}
    container:
      image: registry.td.com/td/pipe/edp-core-github-actions:3.41.2
    steps:
      - name: Get Azure Vault URL
        id: get-azure-vault-url
        run: "python3 /app/main.py"
        env:
          INPUT_FUNCTION: "get_azure_vault_url"

      - name: Retrieve Vault Secrets
        id: retrieve-vault
        uses: hashicorp/vault-action@v3.0.0
        with:
          # runner will only be englab or prod
          # url: ${{ matrix.env == 'englab' && 'https://eng.vault.td.com' || 'https://vault.td.com' }}
          url: ${{ steps.get-azure-vault-url.outputs.azure_vault_url }}
          method: jwt
          path: jwt_github
          role: pipe-github-workflow
          exportToken: true
          secrets: |
            pipe/data/csl/nexus-pull-username-prod nexus-pull-username-prod | NEXUS_PULL_USERNAME ;
            pipe/data/csl/nexus-pull-password-prod nexus-pull-password-prod | NEXUS_PULL_PASSWORD ;
            pipe/data/csl/github-saas-admin-token-prod github-saas-admin-token-prod | GH_ADMIN_TOKEN ;

      - name: Generate Github App Token
        run: "python3 /app/main.py"
        env:
          INPUT_FUNCTION: "generate_github_app_token"
          GH_TOKEN_KEYS: "GH_ADMIN_TOKEN"

      - name: update workflows
        run: "python3 /app/main.py"
        env:
          INPUT_FUNCTION: "update_workflows"
          VERSION: ${{ github.event.inputs.branch }}
          REPOSITORY: ${{ github.event.inputs.repository }}
          UPDATE_DATADOG_WORKFLOWS: ${{ github.event.inputs.update_datadog_workflows }}
          UPDATE_EDP_CORE_WORKFLOWS: ${{ github.event.inputs.update_edp_core_workflows }}
          UPDATE_CONTAINER_WORKFLOWS: ${{ github.event.inputs.update_container_workflows }}
          UPDATE_CERTIFICATION_WORKFLOWS: ${{ github.event.inputs.update_certification_workflows }}

      - name: Clean Up Runner Workspace
        if: ${{ always() }}
        run: "python3 /app/main.py"
        env:
          INPUT_FUNCTION: "clean_up_workspace"
